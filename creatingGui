from tkinter import *
from tkinter import ttk

class CreateGUI:

    def __init__(self, top):

        top.title("Marketing Tool")

        frm = ttk.Frame(top, padding="3 3 12 12")
        frm.grid(column=0, row=0, sticky=(N, W, E, S))
        top.columnconfigure(0, weight=1)
        top.rowconfigure(0, weight=1)

        self.productionLY = StringVar()
        productionLY_entry = ttk.Entry(frm, width=7, textvariable=self.productionLY)
        productionLY_entry.grid(column=2, row=1, sticky=(W, E))

        self.laborLY = StringVar()
        laborLY_entry = ttk.Entry(frm, width=7, textvariable=self.laborLY)
        laborLY_entry.grid(column=2, row=2, sticky=(W, E))

        self.laborLyCost = StringVar()
        laborLyCost_entry = ttk.Entry(frm, width=7, textvariable=self.laborLyCost)
        laborLyCost_entry.grid(column=2, row=3, sticky=(W, E))

        self.capitalInvestmentLY = StringVar()
        capitalInvestmentLY_entry = ttk.Entry(frm, width=7, textvariable=self.capitalInvestmentLY)
        capitalInvestmentLY_entry.grid(column=2, row=4, sticky=(W, E))

        self.capitalInvestmentCostsLY = StringVar()
        capitalInvestmentCostsLY_entry = ttk.Entry(frm, width=7, textvariable=self.capitalInvestmentCostsLY)
        capitalInvestmentCostsLY_entry.grid(column=2, row=5, sticky=(W, E))

        self.energyLY = StringVar()
        energyLY_entry = ttk.Entry(frm, width=7, textvariable=self.energyLY)
        energyLY_entry.grid(column=2, row=6, sticky=(W, E))

        self.energyCostsLY = StringVar()
        energyCosts_entry = ttk.Entry(frm, width=7, textvariable=self.energyCostsLY)
        energyCosts_entry.grid(column=2, row=7, sticky=(W, E))

        self.MFPLY = StringVar()
        ttk.Label(frm, textvariable=self.MFPLY).grid(column=2, row=8, sticky=(W,E))

        ttk.Button(frm, text="Calculate", command=self.MFPCalculate).grid(column=4, row=8, sticky=W)

        ttk.Label(frm, text="Production Last Year").grid(column=3, row=1, sticky=W)
        ttk.Label(frm, text="Labor Last Year").grid(column=3, row=2, sticky=W)
        ttk.Label(frm, text="Labor Costs Last Year").grid(column = 3, row=3, sticky=W)
        ttk.Label(frm, text="Capital Investments Last Year").grid(column=3, row=4, sticky=W)
        ttk.Label(frm, text="Captial Investment Costs").grid(column=3, row=5, sticky=W)
        ttk.Label(frm, text="Energy Used Last Year").grid(column=3, row=6, sticky=W)
        ttk.Label(frm, text="Energy Costs Last Year").grid(column=3, row=7, sticky=W)
        ttk.Label(frm, text="Multifactor Productivity for Last Year").grid(column=3, row=8, sticky=W)

        for child in frm.winfo_children():
            child.grid_configure(padx=5, pady=5)

        productionLY_entry.focus()
        top.bind("<Return>", self.MFPCalculate)

    def MFPCalculate(self, *args):
        try:
            prodLY = float(self.productionLY.get())
            laborhrsLY = float(self.laborLY.get())
            laborcostsLY = float(self.laborLyCost.get())
            capInvLY = float(self.capitalInvestmentLY.get())
            capInvCostsLY = float(self.capitalInvestmentCostsLY.get())
            energyLY = float(self.energyLY.get())
            energyCostsLY = float(self.energyCostsLY.get())
            result = prodLY/((laborhrsLY*laborcostsLY)+(capInvLY*capInvCostsLY)+(energyLY*energyCostsLY))
            self.MFPLY.set(round(result, 4))
        except ValueError:
            pass


top = Tk()
CreateGUI(top)
top.mainloop()